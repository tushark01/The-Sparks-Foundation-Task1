# -*- coding: utf-8 -*-
"""Task_1_#GRIPAUGUST21.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Mt0uAZx0Df8P21SNtMDTi08Hvn7gWLYW

***In This Task , we'll predict the Percentage score of a student based on the number of hours studied. the task has 2 variables where the feature is the no. of hours studied and the target value is the percentage score .
This can be solved using simple Linear Regression***
"""

#Importing required libraries**
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import os

import warnings
warnings.filterwarnings('ignore')

"""***Reading*** ***Data***"""

url= "http://bit.ly/w-data"
dataset= pd.read_csv(url)

"""***Data Exploration***"""

print(dataset.shape)

dataset.head(10)

dataset.describe()

dataset.info()

dataset.plot(kind= "scatter", x= "Hours", y= "Scores")
plt.show()

dataset.corr(method= "pearson")

dataset.corr(method= "spearman")

hours= dataset["Hours"]
scores= dataset["Scores"]
sns.distplot(hours)

sns.distplot(scores)

"""***Linear Regression***"""

x= dataset.iloc[:,:-1].values
y= dataset.iloc[:, 1].values

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test= train_test_split(x,y,test_size= 0.2, random_state=50)

from sklearn.linear_model import LinearRegression
reg= LinearRegression()
reg.fit(x_train, y_train)

m= reg.coef_
c= reg.intercept_
line= m*x+c
plt.scatter(x,y)
plt.plot(x, line)
plt.show()

y_pred= reg.predict(x_test)
actual_predicted= pd.DataFrame({'Target':y_test, 'Predicted': y_pred})
actual_predicted

sns.set_style('whitegrid')
sns.distplot(np.array(y_test-y_pred))
plt.show()

"""***Comparision ::  Actual result vs Predicted Model result***"""

df = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred}) 
df

df.plot(kind='bar',figsize=(5,5))
plt.grid(which='major', linewidth='0.5', color='red')
plt.grid(which='minor', linewidth='0.5', color='green')
plt.show()

"""***What will be predicted score if a student studies for 9.25 hrs/ day?***"""

h= 9.25
s= reg.predict([[h]])
print("If a student studies for {} hours per day, he/she will score {}% in exam".format(h,s))

"""***Model Evaluation***"""

from sklearn import metrics
from sklearn.metrics import r2_score


print("Mean ABsolute error:", metrics.mean_absolute_error(y_test, y_pred))

print("R2 Score:",r2_score(y_test, y_pred))

"""***R-2 gives the score of model fit and in this case we have R-2 = 0.971014141329942 which is actually a great score for this model***

# *Conclusion*

***In this task , i successfullt carried out the Prediction using Supervised ML task and was able to evaluate the model's performance on various parameters.***

*# Thank you !*
"""